CREATE DATABASE shop;

-- Create a table for CDC data generated by Debezium
CREATE TABLE shop.cdc__shop__customer_addresses
(
    -- Columns from the 'before' object
    `before_id` Nullable(Int32),
    `before_first_name` Nullable(String),
    `before_last_name` Nullable(String),
    `before_email` Nullable(String),
    `before_res_address` Nullable(String),
    `before_work_address` Nullable(String),
    `before_country` Nullable(String),
    `before_state` Nullable(String),
    `before_phone_1` Nullable(String),
    `before_phone_2` Nullable(String),

    -- Columns from the 'after' object
    `after_id` Nullable(Int32),
    `after_first_name` Nullable(String),
    `after_last_name` Nullable(String),
    `after_email` Nullable(String),
    `after_res_address` Nullable(String),
    `after_work_address` Nullable(String),
    `after_country` Nullable(String),
    `after_state` Nullable(String),
    `after_phone_1` Nullable(String),
    `after_phone_2` Nullable(String),

    -- Columns from the 'source' object
    `source_version` String,
    `source_connector` String,
    `source_name` String,
    `source_ts_ms` Int64,
    `source_snapshot` Nullable(String),
    `source_db` String,
    `source_sequence` Nullable(String),
    `source_ts_us` Nullable(Int64),
    `source_ts_ns` Nullable(Int64),
    `source_schema` String,
    `source_table` String,
    `source_txId` Nullable(Int64),
    `source_lsn` Nullable(Int64),
    `source_xmin` Nullable(Int64),

    -- Columns from the 'transaction' object
    `transaction_id` Nullable(String),
    `transaction_total_order` Nullable(Int64),
    `transaction_data_collection_order` Nullable(Int64),

    -- Root level columns
    `op` String,
    `ts_ms` Nullable(Int64),
    `ts_us` Nullable(Int64),
    `ts_ns` Nullable(Int64)
)
ENGINE = MergeTree()
ORDER BY (source_ts_ms);

-- Create a View that will transform the CDC Log into Mirrored Table
create or replace view shop.stg__shop__customer_addresses as
with ordered as (
	select
	  If(_op='d', before_id, after_id) as id,
	  after_first_name as first_name,
	  after_last_name as last_name,
	  after_email as email,
	  after_res_address as res_address,
	  after_work_address as work_address,
	  after_country as country,
	  after_state as state,
	  after_phone_1 as phone_1,
	  after_phone_2 as phone_2,
	  op as _op,
	  source_lsn as _lsn,
	  fromUnixTimestamp64Milli(ts_ms) as _modified_at,
	  row_number() over (partition by id order by _lsn desc) as _rn
	from shop.cdc__shop__customer_addresses
),
deduplicated as (
	select * from ordered where _rn=1
	order by id
)
select * 
except (_rn, _op, _lsn) 
from deduplicated
where _op!='d'
